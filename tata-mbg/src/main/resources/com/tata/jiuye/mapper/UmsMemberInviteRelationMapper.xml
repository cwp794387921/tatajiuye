<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tata.jiuye.mapper.UmsMemberInviteRelationMapper">
  <resultMap id="BaseResultMap" type="com.tata.jiuye.model.UmsMemberInviteRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="father_member_id" jdbcType="BIGINT" property="fatherMemberId" />
    <result column="grandpa_member_id" jdbcType="BIGINT" property="grandpaMemberId" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, father_member_id, grandpa_member_id, member_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.tata.jiuye.model.UmsMemberInviteRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_member_invite_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ums_member_invite_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ums_member_invite_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tata.jiuye.model.UmsMemberInviteRelationExample">
    delete from ums_member_invite_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tata.jiuye.model.UmsMemberInviteRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_member_invite_relation (father_member_id, grandpa_member_id, member_id,
      create_time, update_time)
    values (#{fatherMemberId,jdbcType=BIGINT}, #{grandpaMemberId,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tata.jiuye.model.UmsMemberInviteRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_member_invite_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fatherMemberId != null">
        father_member_id,
      </if>
      <if test="grandpaMemberId != null">
        grandpa_member_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fatherMemberId != null">
        #{fatherMemberId,jdbcType=BIGINT},
      </if>
      <if test="grandpaMemberId != null">
        #{grandpaMemberId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tata.jiuye.model.UmsMemberInviteRelationExample" resultType="java.lang.Long">
    select count(*) from ums_member_invite_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_member_invite_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fatherMemberId != null">
        father_member_id = #{record.fatherMemberId,jdbcType=BIGINT},
      </if>
      <if test="record.grandpaMemberId != null">
        grandpa_member_id = #{record.grandpaMemberId,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_member_invite_relation
    set id = #{record.id,jdbcType=BIGINT},
      father_member_id = #{record.fatherMemberId,jdbcType=BIGINT},
      grandpa_member_id = #{record.grandpaMemberId,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tata.jiuye.model.UmsMemberInviteRelation">
    update ums_member_invite_relation
    <set>
      <if test="fatherMemberId != null">
        father_member_id = #{fatherMemberId,jdbcType=BIGINT},
      </if>
      <if test="grandpaMemberId != null">
        grandpa_member_id = #{grandpaMemberId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tata.jiuye.model.UmsMemberInviteRelation">
    update ums_member_invite_relation
    set father_member_id = #{fatherMemberId,jdbcType=BIGINT},
      grandpa_member_id = #{grandpaMemberId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getByMemberId" parameterType="java.lang.Long" resultType="com.tata.jiuye.model.UmsMemberInviteRelation">
      SELECT
          *
      FROM
          ums_member_invite_relation
      WHERE
          member_id = #{memberId,jdbcType=BIGINT}
      limit 1
   </select>

  <resultMap id="directPerformanceBaseResult" type="com.tata.jiuye.DTO.DirectPerformanceResult">
    <result column="nickname" property="nickname"></result>
    <result column="order_count" property="orderCount"></result>
    <result column="total_pay_amount" property="totalPayAmount"></result>
  </resultMap>

  <select id="getDirectPerformance" parameterType="java.lang.Long" resultMap="directPerformanceBaseResult">
      SELECT
          um.icon,
          um.nickname,
          count( oo.order_sn ) AS order_count,
      CASE
              WHEN SUM( oo.pay_amount ) IS NULL THEN
              0 ELSE SUM( oo.pay_amount )
          END AS total_pay_amount
      FROM
          ums_member_invite_relation umir
          LEFT JOIN ums_member um ON umir.member_id = um.id
          LEFT JOIN oms_order oo ON oo.member_id = umir.member_id
      WHERE
          umir.father_member_id = #{fatherMemberId,jdbcType=BIGINT}
          AND oo.pay_amount > 0
          AND oo.`status` NOT IN (0,4,5)
      GROUP BY
          um.nickname
      ORDER BY
          total_pay_amount DESC
   </select>


    <select id="getDirectPerformanceWhenAllOrderNumNull" parameterType="java.lang.Long" resultMap="directPerformanceBaseResult">
      SELECT
          um.icon,
          um.nickname,
          0 AS order_count,
          0 AS total_pay_amount
      FROM
          ums_member_invite_relation umir
          LEFT JOIN ums_member um ON umir.member_id = um.id

      WHERE
          umir.father_member_id = #{fatherMemberId,jdbcType=BIGINT}
      ORDER BY
          um.create_time DESC
    </select>

  <resultMap id="indirectPerformanceBaseResult" type="com.tata.jiuye.DTO.IndirectPerformanceResult">
    <result column="father_nickname" property="fatherNickname"></result>
    <result column="nickname" property="nickname"></result>
    <result column="order_count" property="orderCount"></result>
    <result column="total_pay_amount" property="totalPayAmount"></result>
  </resultMap>

  <select id="getIndirectPerformance" parameterType="java.lang.Long" resultMap="indirectPerformanceBaseResult">
      SELECT
          um.icon,
          umf.icon AS father_icon,
          umf.nickname AS father_nickname,
          um.nickname,
          count( oo.order_sn ) AS order_count,
      CASE
              WHEN SUM( oo.pay_amount ) IS NULL THEN
              0 ELSE SUM( oo.pay_amount )
          END AS total_pay_amount
      FROM
          ums_member_invite_relation umir
          LEFT JOIN ums_member umf ON umir.father_member_id = umf.id
          LEFT JOIN ums_member um ON umir.member_id = um.id
          LEFT JOIN oms_order oo ON oo.member_id = umir.member_id
      WHERE
          umir.grandpa_member_id = #{grandpaMemberId,jdbcType=BIGINT}
          AND oo.pay_amount > 0
          AND oo.`status` NOT IN (0,4,5)
      GROUP BY
          um.nickname
      ORDER BY
          total_pay_amount DESC
   </select>


    <select id="getIndirectPerformanceWhenAllOrderNumNull" parameterType="java.lang.Long" resultMap="indirectPerformanceBaseResult">
      SELECT
          um.icon,
          umf.icon AS father_icon,
          umf.nickname AS father_nickname,
          um.nickname,
          0 AS order_count,
          0 AS total_pay_amount
      FROM
          ums_member_invite_relation umir
          LEFT JOIN ums_member umf ON umir.father_member_id = umf.id
          LEFT JOIN ums_member um ON umir.member_id = um.id
      WHERE
          umir.grandpa_member_id = #{grandpaMemberId,jdbcType=BIGINT}
      ORDER BY
          um.create_time DESC
   </select>

  <select id="getTotalPerformance" resultType="com.tata.jiuye.DTO.TotalPerformanceResult">
      SELECT
      CASE
        WHEN  count( oo.order_sn ) IS NULL THEN
        0 ELSE count( oo.order_sn )
        END AS order_count,
      CASE
              WHEN SUM( oo.pay_amount ) IS NULL THEN
              0 ELSE SUM( oo.pay_amount )
          END AS total_pay_amount
      FROM
          ums_member_invite_relation umir
          LEFT JOIN ums_member um ON umir.member_id = um.id
          LEFT JOIN oms_order oo ON oo.member_id = umir.member_id
      WHERE
          ( umir.father_member_id = #{memberId,jdbcType=BIGINT} OR umir.grandpa_member_id = #{memberId,jdbcType=BIGINT} )
          AND oo.pay_amount > 0
          AND oo.`status` NOT IN ( 0, 4, 5 )
   </select>
</mapper>
